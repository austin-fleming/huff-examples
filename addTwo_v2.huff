#define function addTwo(uint256, uint256) view returns (uint256)

#define macro MAIN() = takes(0) returns(0) {
    // get the function selector
    0x00
    calldataload
    0xE0            // 224; this is a magic number for 256-32 bits (224 bits/28bytes)
    shr             // shifts calldata by 28bytes and push function selector onto stack

    // jump to the implementation of the ADD_TWO function if the calldata matches the function selector
    __FUNC_SIG(addTwo) eq addTwo jumpi

    addTwo:
        ADD_TWO()
}

#define macro ADD_TWO() = takes(0) returns(0) {
    0x04 calldataload   // load first 32bytes onto stack // first 4 was the function selector
    0x24 calldataload   // load second 32 bytes into stack
    add

    0x00 mstore         // place result into memory address 0x00
    0x20 0x00 return    // return 32bytes in memory address 0x00
}